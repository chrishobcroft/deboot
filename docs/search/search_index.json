{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the DeBoot Project documentation web site! DeBoot is a research project that explores ways to load operating system software from decentralised storage backends.","title":"Welcome to the DeBoot Project documentation web site!"},{"location":"#welcome-to-the-deboot-project-documentation-web-site","text":"DeBoot is a research project that explores ways to load operating system software from decentralised storage backends.","title":"Welcome to the DeBoot Project documentation web site!"},{"location":"appliance/","text":"","title":"Appliances"},{"location":"booting/","text":"How booting works Booting a computer \u2014 that is, executing code on a computer starting from a completely uninitialized, powered off state \u2014 usually traverses several stages before reaching its stable state of running operating system software. The job of each boot stage is to retrieve the program to execute in the next stage from wherever it is being stored, load it into memory, and execute it. Different boot stages are distinguished by their resource footprint, user interface, the types of storage locations from which they can retrieve data, and the executable image formats they are able to load. Generally, boot stages are designed to be ephemeral in the sense that they leave as little as possible behind in memory when the next stage is running.","title":"How booting works"},{"location":"booting/#how-booting-works","text":"Booting a computer \u2014 that is, executing code on a computer starting from a completely uninitialized, powered off state \u2014 usually traverses several stages before reaching its stable state of running operating system software. The job of each boot stage is to retrieve the program to execute in the next stage from wherever it is being stored, load it into memory, and execute it. Different boot stages are distinguished by their resource footprint, user interface, the types of storage locations from which they can retrieve data, and the executable image formats they are able to load. Generally, boot stages are designed to be ephemeral in the sense that they leave as little as possible behind in memory when the next stage is running.","title":"How booting works"},{"location":"build/","text":"","title":"Building DeBoot"},{"location":"deboot/","text":"","title":"How DeBoot works"},{"location":"debooting/","text":"","title":"DeBooting"},{"location":"gotcha/","text":"","title":"Gotchas"},{"location":"grub/","text":"parp","title":"GRUB"},{"location":"initramfs/","text":"Initramfs An initial ram filesystem or initramfs is an initial stage used in the loading of Linux operating systems that offloads the job of fetching and mounting the root filesystem from the kernel to userspace tools. # FEATURES Loaders: kernel loader, EFI Fetches: * Loads: ELF executables Size: 10-100MB As an archive, an initramfs is a concatenated string of cpio archives, some or all of which may be gzip-compressed. An initramfs can be unpacked using the cpio utility, or inspected at a higher level using lsinitrd . The dracut-cpio and skipcpio utilities are adapted specifically to unpack the cpio archives produced by dracut. Building the initramfs The DeBoot project uses a fork of the dracut project to generate initial ram filesystems.","title":"Initramfs"},{"location":"initramfs/#initramfs","text":"An initial ram filesystem or initramfs is an initial stage used in the loading of Linux operating systems that offloads the job of fetching and mounting the root filesystem from the kernel to userspace tools. # FEATURES Loaders: kernel loader, EFI Fetches: * Loads: ELF executables Size: 10-100MB As an archive, an initramfs is a concatenated string of cpio archives, some or all of which may be gzip-compressed. An initramfs can be unpacked using the cpio utility, or inspected at a higher level using lsinitrd . The dracut-cpio and skipcpio utilities are adapted specifically to unpack the cpio archives produced by dracut.","title":"Initramfs"},{"location":"initramfs/#building-the-initramfs","text":"The DeBoot project uses a fork of the dracut project to generate initial ram filesystems.","title":"Building the initramfs"},{"location":"metal/","text":"","title":"Metal"},{"location":"overview/","text":"","title":"Overview"},{"location":"u-boot/","text":"","title":"U-Boot"},{"location":"uefi/","text":"","title":"UEFI"}]}